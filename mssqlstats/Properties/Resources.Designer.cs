//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace mssqlstats.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("mssqlstats.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   DBCC SQLPERF (&apos;sys.dm_os_wait_stats&apos;, CLEAR);
        ///DBCC SQLPERF (&apos;sys.dm_os_latch_stats&apos;, CLEAR);
        ///DBCC SQLPERF (&apos;sys.dm_os_spinlock_stats&apos;, CLEAR); に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string _DBCC_SQLPERF_CLEAR_STATS {
            get {
                return ResourceManager.GetString("_DBCC_SQLPERF_CLEAR_STATS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *  
        ///FROM
        ///  sys.databases
        ///WHERE
        ///  name not in(&apos;master&apos;, &apos;tempdb&apos;, &apos;model&apos;, &apos;msdb&apos;)
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string _GET_DB_NAME_LIST {
            get {
                return ResourceManager.GetString("_GET_DB_NAME_LIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   select /*mssqlstats_v1*/
        ///  SERVERPROPERTY(&apos;ProductVersion&apos;) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string _GET_PRODUCT_VERSION {
            get {
                return ResourceManager.GetString("_GET_PRODUCT_VERSION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SET LOCK_TIMEOUT {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string _SET_LOCK_TIMEOUT {
            get {
                return ResourceManager.GetString("_SET_LOCK_TIMEOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string _SET_TRANSACTION_ISOLATION_LEVEL_READUNCOMMITTED {
            get {
                return ResourceManager.GetString("_SET_TRANSACTION_ISOLATION_LEVEL_READUNCOMMITTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v1*/
        ///DBCC DBINFO WITH TABLERESULTS
        ///
        ////*
        ///DECLARE @dbname sysname
        ///DECLARE @sql nvarchar(max)
        ///DECLARE cur CURSOR FOR select name from sys.databases
        ///OPEN cur
        ///FETCH NEXT FROM cur INTO @dbname
        ///WHILE @@FETCH_STATUS = 0
        ///BEGIN
        ///   SET @sql = N&apos;DBCC DBINFO ( &apos; + @dbname + &apos;) WITH TABLERESULTS&apos;
        ///   EXEC (@sql)
        ///   FETCH NEXT FROM cur INTO @dbname
        ///END
        ///CLOSE cur
        ///DEALLOCATE cur
        ///*/ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string dbcc_dbinfo {
            get {
                return ResourceManager.GetString("dbcc_dbinfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v2*/
        ///DBCC LOGINFO
        ///
        ////*
        ///DECLARE @dbname sysname
        ///DECLARE @sql nvarchar(max)
        ///DECLARE cur CURSOR FOR select name from sys.databases
        ///OPEN cur
        ///FETCH NEXT FROM cur INTO @dbname
        ///WHILE @@FETCH_STATUS = 0
        ///BEGIN
        ///   SET @sql = N&apos;DBCC LOGINFO ( &apos; + @dbname + &apos;) &apos;
        ///   EXEC (@sql)
        ///   FETCH NEXT FROM cur INTO @dbname
        ///END
        ///CLOSE cur
        ///DEALLOCATE cur
        ///*/ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string dbcc_loginfo {
            get {
                return ResourceManager.GetString("dbcc_loginfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v1*/
        ///DBCC SQLPERF(LOGSPACE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string dbcc_sqlperf_logspace {
            get {
                return ResourceManager.GetString("dbcc_sqlperf_logspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v1*/
        ///DBCC TRACESTATUS に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string dbcc_tracestatus {
            get {
                return ResourceManager.GetString("dbcc_tracestatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  db.name [Name]
        ///  , db.recovery_model_desc
        ///  , CASE WHEN agdb.database_id IS NOT NULL THEN &apos;AG Database&apos;
        ///      ELSE &apos;Not AG Database&apos;
        ///    END [IsAgDb]
        ///  , CASE WHEN sys.fn_hadr_backup_is_preferred_replica(db.name) = 1 THEN &apos;YES&apos;
        ///      ELSE &apos;NO&apos;
        ///    END [IsPreferredReplica]
        ///  , t.LastFullBackup
        ///  , t.LastDiffBackup
        ///  , t.LastLogBackup
        ///  , t.DaysSinceLastFullBackup
        ///  , t.DaysSinceLastDiffBackup
        ///  , t.MinutesSinceLastLogBackup
        ///FROM
        ///  sys.databases db
        ///  LEFT OUTER JOIN [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msdb_dbo_backupset {
            get {
                return ResourceManager.GetString("msdb_dbo_backupset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  db.name [Name]
        ///  , db.recovery_model_desc
        ///  , t.LastFullBackup
        ///  , t.LastDiffBackup
        ///  , t.LastLogBackup
        ///  , t.DaysSinceLastFullBackup
        ///  , t.DaysSinceLastDiffBackup
        ///  , t.MinutesSinceLastLogBackup
        ///FROM
        ///  sys.databases db
        ///  LEFT OUTER JOIN
        ///    (  SELECT
        ///         p.database_name
        ///         , MAX(p.[D]) [LastFullBackup]
        ///         , MAX(p.[I]) [LastDiffBackup]
        ///         , MAX(p.[L]) [LastLogBackup]
        ///         , DATEDIFF(DAY, MAX(p.[D]), GETDATE()) [DaysSinceLastFullBackup]
        /// [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msdb_dbo_backupset_2 {
            get {
                return ResourceManager.GetString("msdb_dbo_backupset_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  DB_NAME(database_id) AS database_name
        ///  ,　*
        ///FROM
        ///  msdb.dbo.suspect_pages
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msdb_dbo_suspect_pages {
            get {
                return ResourceManager.GetString("msdb_dbo_suspect_pages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *   
        ///FROM
        ///  msdb.dbo.sysalerts
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msdb_dbo_sysalerts {
            get {
                return ResourceManager.GetString("msdb_dbo_sysalerts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *   
        ///FROM
        ///  msdb.dbo.syscollector_collection_items
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msdb_dbo_syscollector_collection_items {
            get {
                return ResourceManager.GetString("msdb_dbo_syscollector_collection_items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *   
        ///FROM
        ///  msdb.dbo.syscollector_collection_sets
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msdb_dbo_syscollector_collection_sets {
            get {
                return ResourceManager.GetString("msdb_dbo_syscollector_collection_sets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///    j.name AS JobName
        ///  , j.description AS JobDesc
        ///  , j.enabled AS JobEnabled
        ///  , j.date_created AS JobCreated
        ///  , j.date_modified AS JobModified
        ///  , SUSER_SNAME(j.owner_sid) AS JobOwner
        ///  , c.name AS JobCategory
        ///  , s.enabled AS ScheduleEnabled
        ///  , js.next_run_date
        ///  , js.next_run_time
        ///  , j.*
        ///  , s.*
        ///FROM msdb.dbo.sysjobs AS j
        ///  INNER JOIN msdb.dbo.syscategories AS c
        ///    ON j.category_id = c.category_id
        ///  LEFT OUTER JOIN msdb.dbo.sysjobschedules AS js
        ///    ON j.jo [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msdb_dbo_sysjobschedules {
            get {
                return ResourceManager.GetString("msdb_dbo_sysjobschedules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  j.name
        ///  ,s.*
        ///FROM
        ///  msdb.dbo.sysjobs j
        ///  LEFT JOIN msdb.dbo.sysjobsteps s
        ///  ON j.job_id = s.job_id
        ///ORDER BY s.step_id
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msdb_dbo_sysjobsteps {
            get {
                return ResourceManager.GetString("msdb_dbo_sysjobsteps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  p.name
        ///  ,p.description
        ///  ,s.*
        ///FROM 
        ///  msdb.dbo.sysmaintplan_plans p
        ///  LEFT JOIN msdb.dbo.sysmaintplan_subplans s
        ///  ON p.id = s.plan_id
        ///ORDER BY
        ///  s.schedule_id
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msdb_dbo_sysmaintplan_plans {
            get {
                return ResourceManager.GetString("msdb_dbo_sysmaintplan_plans", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *   
        ///FROM
        ///  msdb.dbo.sysoperators
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msdb_dbo_sysoperators {
            get {
                return ResourceManager.GetString("msdb_dbo_sysoperators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *   
        ///FROM
        ///  msdb.dbo.sysproxies
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msdb_dbo_sysproxies {
            get {
                return ResourceManager.GetString("msdb_dbo_sysproxies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *
        ///FROM
        ///  msdb.dbo.sysschedules
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string msdb_dbo_sysschedules {
            get {
                return ResourceManager.GetString("msdb_dbo_sysschedules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v1*/
        ///EXEC sys.xp_readerrorlog 0, 1, N&apos;Database Instant File Initialization&apos; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string readerrorlog_ifi {
            get {
                return ResourceManager.GetString("readerrorlog_ifi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v2*/
        ///CREATE TABLE #iostall(LogDate datetime, ProcessInfo sysname, Text nvarchar(1000))
        ///
        ///INSERT INTO #iostall 
        ///  EXEC xp_readerrorlog 0, 1, N&apos;taking longer than 15 seconds&apos;
        ///
        ////*
        ///INSERT INTO #iostall 
        ///  EXEC xp_readerrorlog 1, 1, N&apos;taking longer than 15 seconds&apos;;
        ///
        ///INSERT INTO #iostall 
        ///  EXEC xp_readerrorlog 2, 1, N&apos;taking longer than 15 seconds&apos;;
        ///
        ///・・・負荷を考慮し過去にはさかのぼらない
        ///*/
        ///
        ///SELECT LogDate, ProcessInfo, Text
        ///FROM #iostall
        ///ORDER BY LogDate DESC
        ///
        ///DROP TABLE #iostall
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string readerrorlog_iostall {
            get {
                return ResourceManager.GetString("readerrorlog_iostall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v2*/
        ///EXEC sys.xp_readerrorlog 0, 1, N&apos;Manufacturer&apos; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string readerrorlog_manufacturer {
            get {
                return ResourceManager.GetString("readerrorlog_manufacturer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v1*/
        ///EXEC sys.xp_readerrorlog 0, 1, &quot;detected&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string readerrorlog_num_of_phisical_cores {
            get {
                return ResourceManager.GetString("readerrorlog_num_of_phisical_cores", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  @@VERSION AS Version
        ///, SERVERPROPERTY(&apos;MachineName&apos;) AS MachineName
        ///, SERVERPROPERTY(&apos;ServerName&apos;) AS ServerName
        ///, SERVERPROPERTY(&apos;ComputerNamePhysicalNetBIOS&apos;) AS ComputerNamePhysicalNetBIOS
        ///, SERVERPROPERTY(&apos;InstanceName&apos;) AS InstanceName
        ///, SERVERPROPERTY(&apos;InstanceDefaultDataPath&apos;) AS InstanceDefaultDataPath
        ///, SERVERPROPERTY(&apos;InstanceDefaultLogPath&apos;) AS InstanceDefaultLogPath
        ///, SERVERPROPERTY(&apos;processid&apos;) AS PID
        ///, SERVERPROPERTY(&apos;Collation&apos;) AS Collation
        ///, SERVERPROPER [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string serverproperty {
            get {
                return ResourceManager.GetString("serverproperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v1*/
        ///DECLARE @dbname sysname
        ///DECLARE @sql nvarchar(max)
        ///DECLARE cur CURSOR FOR select name from sys.databases
        ///OPEN cur
        ///FETCH NEXT FROM cur INTO @dbname
        ///WHILE @@FETCH_STATUS = 0
        ///BEGIN
        ///   SET @sql = N&apos;USE [&apos; + @dbname + &apos;];&apos;
        ///   SET @sql = @sql + N&apos;EXEC sp_spaceused ;&apos;
        ///   -- より正確な状態を取得する場合は@updateusageをTRUEに。コストがかかるので注意。
        ///   -- SET @sql = @sql + N&apos;EXEC sp_spaceused @updateusage = N&apos;&apos;TRUE&apos;&apos;;&apos;
        ///   EXEC (@sql) -- USE句の有効範囲はこのEXEC内に限る
        ///   FETCH NEXT FROM cur INTO @dbname
        ///END
        ///CLOSE cur
        ///DEA [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sp_spaceused_database {
            get {
                return ResourceManager.GetString("sp_spaceused_database", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v1*/
        ///DECLARE userobj_cursor CURSOR FOR 
        ///SELECT 
        ///  sys.schemas.name + &apos;.&apos;+ sys.objects.name
        ///FROM sys.objects, sys.schemas
        ///WHERE object_id &gt; 100 
        ///  and type_desc = &apos;USER_TABLE&apos; 
        ///  and sys.objects.schema_id = sys.schemas.schema_id
        ///  -- and 使用する際は何らかのフィルタをかけて対象とするオブジェクトを絞ること
        ///
        ///OPEN userobj_cursor
        ///
        ///DECLARE @name varchar(256)
        ///FETCH userobj_cursor into @name
        ///WHILE (@@FETCH_STATUS = 0) 
        ///BEGIN
        ///  EXEC sp_spaceused @objname = @name
        ///    FETCH userobj_cursor into @name
        ///END
        ///
        ///CLOSE userobj_ [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sp_spaceused_object {
            get {
                return ResourceManager.GetString("sp_spaceused_object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  g.name AS ag_name
        ///  , c.database_name 
        ///  , r.replica_server_name
        ///  , r.availability_mode_desc
        ///  , s.*
        ///  , g.*
        ///  , r.*
        ///  , c.*
        ///FROM sys.dm_hadr_database_replica_states AS s
        ///  INNER JOIN sys.availability_databases_cluster AS c
        ///    ON s.group_id = c.group_id 
        ///    AND s.group_database_id = c.group_database_id
        ///  INNER JOIN sys.availability_groups AS g
        ///    ON g.group_id = s.group_id
        ///  INNER JOIN sys.availability_replicas AS r
        ///    ON s.group_id = r.group_id 
        ///    AND s.re [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_availability_groups {
            get {
                return ResourceManager.GetString("sys_availability_groups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  name
        ///  ,value 
        ///  ,value_in_use
        ///FROM
        ///  sys.configurations
        ///ORDER BY
        ///  name
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_configurations {
            get {
                return ResourceManager.GetString("sys_configurations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  * 
        ///FROM
        ///  sys.database_scoped_configurations
        ///ORDER BY
        ///  configuration_id
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_database_scoped_configurations {
            get {
                return ResourceManager.GetString("sys_database_scoped_configurations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  SUSER_SNAME(owner_sid) AS owner
        ///  , * 
        ///FROM sys.databases
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_databases {
            get {
                return ResourceManager.GetString("sys_databases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE master
        ///SELECT /*mssqlstats_v1*/ 
        ///  DB_NAME(e.database_id) AS dbname
        ///  , c.*
        ///  , e.*
        ///FROM 
        ///  sys.certificates c 
        ///  INNER JOIN sys.dm_database_encryption_keys e 
        ///    ON c.thumbprint = e.encryptor_thumbprint 
        ///WHERE 
        ///  c.pvt_key_last_backup_date IS NULL に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_database_encryption_keys {
            get {
                return ResourceManager.GetString("sys_dm_database_encryption_keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb
        ///SELECT /*mssqlstats_v1*/
        ///  DB_NAME(database_id) as dbname
        ///  ,SUM(CAST(user_object_reserved_page_count AS numeric(38)))*8 as user_objects_kb
        ///  ,SUM(CAST(internal_object_reserved_page_count AS numeric(38)))*8 as internal_objects_kb
        ///  ,SUM(CAST(version_store_reserved_page_count AS numeric(38)))*8  as version_store_kb
        ///  ,SUM(CAST(unallocated_extent_page_count AS numeric(38)))*8 as freespace_kb
        ///  ,SUM(CAST(mixed_extent_page_count AS numeric(38)))*8 as mixed_extent_kb
        ///FROM sys.dm_db_file_space_ [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_file_space_usage {
            get {
                return ResourceManager.GetString("sys_dm_db_file_space_usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb --システムDB全体ではなくtempdbのみを対象とする
        ///DECLARE @db_id int = DB_ID(); -- 2000互換モードだと関数の引数に関数を使うとsyntax errorになることへの対処。
        ///SELECT /*mssqlstats_v1*/
        ///  DB_NAME(s.database_id) AS dbaname
        ///  ,OBJECT_NAME(s.object_id) AS tabname
        ///  ,i.name AS idxname
        ///  ,i.index_id  
        ///  ,partition_number
        ///  ,row_lock_count
        ///  ,row_lock_wait_count
        ///  ,row_lock_wait_in_ms
        ///  ,[row block %]=CAST(100.0 * row_lock_wait_count / (1 + row_lock_count) as numeric(15,2))
        ///  ,[avg row lock waits in ms]=CAST(1.0 * row_lock_wait_in_ms / (1 + r [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_index_operational_stats_lock_sysdb {
            get {
                return ResourceManager.GetString("sys_dm_db_index_operational_stats_lock_sysdb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   DECLARE @db_id int = DB_ID(); -- 2000互換モードだと関数の引数に関数を使うとsyntax errorになることへの対処。
        ///SELECT /*mssqlstats_v1*/
        ///  DB_NAME(s.database_id) AS dbaname
        ///  ,OBJECT_NAME(s.object_id) AS tabname
        ///  ,i.name AS idxname
        ///  ,i.index_id  
        ///  ,partition_number
        ///  ,row_lock_count
        ///  ,row_lock_wait_count
        ///  ,row_lock_wait_in_ms
        ///  ,[row block %]=CAST(100.0 * row_lock_wait_count / (1 + row_lock_count) as numeric(15,2))
        ///  ,[avg row lock waits in ms]=CAST(1.0 * row_lock_wait_in_ms / (1 + row_lock_wait_count) as numeric(15,2))
        ///   [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_index_operational_stats_lock_userdb {
            get {
                return ResourceManager.GetString("sys_dm_db_index_operational_stats_lock_userdb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb --システムDB全体ではなくtempdbのみを対象とする
        ///DECLARE @db_id int = DB_ID(); -- 2000互換モードだと関数の引数に関数を使うとsyntax errorになることへの対処。
        ///SELECT /*mssqlstats_v1*/
        ///  DB_NAME(u.database_id) AS dbaname
        ///  ,OBJECT_NAME(u.object_id) AS tabname
        ///  ,i.name AS idxname
        ///  ,CAST(u.user_seeks AS numeric(38)) + CAST(u.user_scans AS numeric(38)) + CAST(u.user_lookups AS numeric(38)) AS reads
        ///  ,u.user_updates AS writes
        ///  ,u.user_updates
        ///  ,u.index_id
        ///  ,u.user_seeks
        ///  ,u.user_scans
        ///  ,u.user_lookups
        ///  ,s.range_scan_count
        ///  ,s.s [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_index_operational_stats_sysdb {
            get {
                return ResourceManager.GetString("sys_dm_db_index_operational_stats_sysdb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   DECLARE @db_id int = DB_ID(); -- 2000互換モードだと関数の引数に関数を使うとsyntax errorになることへの対処。
        ///SELECT /*mssqlstats_v1*/
        ///  DB_NAME(u.database_id) AS dbaname
        ///  ,OBJECT_NAME(u.object_id) AS tabname
        ///  ,i.name AS idxname
        ///  ,CAST(u.user_seeks AS numeric(38)) + CAST(u.user_scans AS numeric(38)) + CAST(u.user_lookups AS numeric(38)) AS reads
        ///  ,u.user_updates AS writes
        ///  ,u.user_updates
        ///  ,u.index_id
        ///  ,u.user_seeks
        ///  ,u.user_scans
        ///  ,u.user_lookups
        ///  ,s.range_scan_count
        ///  ,s.singleton_lookup_count
        ///  ,CAST(s.leaf_ins [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_index_operational_stats_userdb {
            get {
                return ResourceManager.GetString("sys_dm_db_index_operational_stats_userdb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   DECLARE @db_id int = DB_ID(); -- 2000互換モードだと関数の引数に関数を使うとsyntax errorになることへの対処。
        ///SELECT TOP 500 /*mssqlstats_v1*/
        ///  DB_NAME(database_id) AS db_name
        ///  , OBJECT_NAME(s.object_id) AS table_name
        ///  , i.name AS index_name
        ///  , s.index_id
        ///  , s.partition_number
        ///  , d.name AS fg_name
        ///  , d.type AS fg_type
        ///  , s.index_type_desc
        ///  , s.alloc_unit_type_desc
        ///  , s.avg_fragmentation_in_percent
        ///  , s.fragment_count
        ///  , s.avg_fragment_size_in_pages
        ///  , s.page_count
        ///  , s.avg_page_space_used_in_percent
        ///  , s.re [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_index_physical_stats {
            get {
                return ResourceManager.GetString("sys_dm_db_index_physical_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  OBJECT_NAME(object_id) AS tabname
        ///  ,i.name AS idxname
        ///  ,type
        ///FROM sys.indexes i
        ///WHERE
        ///  objectproperty(i.object_id,&apos;IsUserTable&apos;) = 1
        ///  AND i.index_id &lt;&gt; 0
        ///  AND i.index_id NOT IN 
        ///    (
        ///      SELECT
        ///        s.index_id 
        ///      FROM
        ///        sys.dm_db_index_usage_stats s 
        ///      WHERE
        ///        s.object_id=i.object_id
        ///        AND i.index_id=s.index_id
        ///        AND s.database_id = DB_ID()
        ///    )
        ///ORDER BY
        ///  1 ASC
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_index_usage_stats {
            get {
                return ResourceManager.GetString("sys_dm_db_index_usage_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  *
        ///FROM
        ///  sys.dm_db_log_info(DB_ID()) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_log_info {
            get {
                return ResourceManager.GetString("sys_dm_db_log_info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  *
        ///FROM
        ///  sys.dm_db_log_stats(DB_ID()) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_log_stats {
            get {
                return ResourceManager.GetString("sys_dm_db_log_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  s.avg_total_user_cost 
        ///    * (s.avg_user_impact / 100.0) 
        ///    * ( CAST(s.user_seeks as numeric(38)) + CAST(s.user_scans as numeric(38)) )
        ///    AS improvement_measure
        ///  ,DB_NAME(d.database_id) AS dbname
        ///  ,OBJECT_NAME(d.object_id) AS tablname
        ///  ,&apos;CREATE INDEX [missing_index_&apos; + CONVERT (varchar, g.index_group_handle) + &apos;_&apos; + CONVERT (varchar, d.index_handle) 
        ///  + &apos;_&apos; + LEFT (PARSENAME(d.statement, 1), 32) + &apos;]&apos;
        ///  + &apos; ON &apos; + d.statement 
        ///  + &apos; (&apos; + ISNULL (d.equality_column [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_missing_index {
            get {
                return ResourceManager.GetString("sys_dm_db_missing_index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///    o.name AS TableName
        ///    , i.name AS IndexName
        ///    , s.row_count AS NumOfRows
        ///    , s.used_page_count AS NumOfPages
        ///    , CAST(s.used_page_count AS numeric(38)) * 8 AS SizeKB
        ///FROM
        ///    sys.objects o
        ///LEFT JOIN
        ///    sys.dm_db_partition_stats s
        ///    ON
        ///    s.object_id = o.object_id
        ///LEFT JOIN
        ///    sys.indexes i
        ///    ON
        ///    i.object_id = s.object_id
        ///    AND
        ///    i.index_id = s.index_id
        ///WHERE
        ///    o.type = &apos;U&apos;
        ///ORDER BY
        ///    o.Name
        ///OPTION(RECOMPILE)
        ///
        ////*
        ///-- SQL2000
        ///SELE [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_partition_stats {
            get {
                return ResourceManager.GetString("sys_dm_db_partition_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *   
        ///FROM
        ///  sys.dm_db_persisted_sku_features
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_persisted_sku_features {
            get {
                return ResourceManager.GetString("sys_dm_db_persisted_sku_features", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT TOP 500 /*mssqlstats_v1*/
        ///  OBJECT_NAME(p.object_id) AS table_name
        ///  , s.object_id
        ///  , s.name AS stat_name 
        ///  , p.last_updated
        ///  , p.stats_id
        ///  , s.auto_created
        ///  , s.user_created
        ///  , s.no_recompute
        ///  , s.has_filter
        ///  , s.filter_definition
        ///  , s.is_temporary  /*SQL12～*/
        ///  , p.rows
        ///  , p.rows_sampled
        ///  , (1.0 * p.rows) / p.rows_sampled as sample_rate
        ///  , p.steps
        ///  , p.unfiltered_rows
        ///  , p.modification_counter
        ///FROM sys.stats s 
        ///  LEFT JOIN sys.objects o
        ///    ON s.object_id = o.objec [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_db_stats_properties {
            get {
                return ResourceManager.GetString("sys_dm_db_stats_properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  &apos;Single use plans (usecounts=1)&apos; = sum(case(CAST(usecounts AS numeric(38))) when 1 then 1 else 0 end)
        ///  , &apos;Single use plans size(KB)&apos; = sum(case(CAST(usecounts AS numeric(38))) when 1 then CAST(size_in_bytes AS numeric(38)) else 0 end)/1024
        ///  , &apos;Re-used plans (usecounts&gt;1)&apos; = sum(case(CAST(usecounts AS numeric(38))) when 1 then 0 else 1 end)
        ///  , &apos;Re-used plans size(KB)&apos; = sum(case(CAST(usecounts AS numeric(38))) when 1 then 0 else CAST(size_in_bytes AS numeric(38)) end)/1024
        /// [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_cached_plans_reused_ratio {
            get {
                return ResourceManager.GetString("sys_dm_exec_cached_plans_reused_ratio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  objtype
        ///  , cacheobjtype
        ///  , COUNT_BIG(*) AS num_of_obj
        ///  , SUM(CAST(size_in_bytes AS numeric(38))) / 1024 AS size_in_kbytes
        ///  , SUM(CAST(usecounts AS numeric(38))) AS usecounts
        ///  , SUM(CAST(refcounts AS numeric(38))) AS refcounts
        ///FROM
        ///  sys.dm_exec_cached_plans
        ///GROUP BY
        ///  objtype, cacheobjtype
        ///ORDER BY
        ///  size_in_kbytes DESC
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_cached_plans_size {
            get {
                return ResourceManager.GetString("sys_dm_exec_cached_plans_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT TOP 100 /*mssqlstats_v1*/
        ///  DB_NAME(qt.dbid) AS dbanme
        ///  ,OBJECT_NAME(qt.objectid) as objectname
        ///  , SUBSTRING(qt.text, (qs.statement_start_offset/2) + 1,
        ///    ((CASE qs.statement_end_offset 
        ///        WHEN -1 THEN DATALENGTH(text)
        ///        ELSE qs.statement_end_offset END 
        ///        - qs.statement_start_offset)/2) + 1
        ///    ) AS statement_text
        ///  , c.usecounts
        ///  , c.size_in_bytes / 1024 AS size_in_kbytes
        ///  , c.objtype
        ///  , c.cacheobjtype
        ///  , c.refcounts
        ///  , qt.text
        ///  --, qs.*
        ///  /*
        ///  --, m.*
        /// [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_cached_plans_sysdb {
            get {
                return ResourceManager.GetString("sys_dm_exec_cached_plans_sysdb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT TOP 100 /*mssqlstats_v1*/
        ///  --DB_NAME(qt.dbid) AS dbanme
        ///  OBJECT_NAME(qt.objectid) as objectname
        ///  , SUBSTRING(qt.text, (qs.statement_start_offset/2) + 1,
        ///    ((CASE qs.statement_end_offset 
        ///        WHEN -1 THEN DATALENGTH(text)
        ///        ELSE qs.statement_end_offset END 
        ///        - qs.statement_start_offset)/2) + 1
        ///    ) AS statement_text
        ///  , c.usecounts
        ///  , c.size_in_bytes / 1024 AS size_in_kbytes
        ///  , c.objtype
        ///  , c.cacheobjtype
        ///  , c.refcounts
        ///  , qt.text
        ///  --, qs.*
        ///  /*
        ///  --, m.*        /// [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_cached_plans_userdb {
            get {
                return ResourceManager.GetString("sys_dm_exec_cached_plans_userdb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとCROSS APPLYがsyntax errorになるのでtempdbに移動
        ///SELECT /*mssqlstats_v1*/
        ///  cur.* 
        ///FROM 
        ///  sys.dm_exec_connections con
        ///  cross apply sys.dm_exec_cursors(con.session_id) as cur
        ///WHERE
        ///  cur.fetch_buffer_size = 1 
        ///  and cur.properties LIKE &apos;API%&apos;
        ///-- order by なし（ランダム出力）
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_cursors {
            get {
                return ResourceManager.GetString("sys_dm_exec_cursors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとCROSS APPLYがsyntax errorになるのでtempdbに移動
        ///SELECT TOP 50 /*mssqlstats_v1*/
        ///  mg.*, qt.text AS &quot;Statement Text&quot;
        ///FROM
        ///  sys.dm_exec_query_memory_grants AS mg
        ///  CROSS APPLY sys.dm_exec_sql_text (mg.sql_handle) AS qt
        ///ORDER BY wait_time_ms DESC
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_query_memory_grants {
            get {
                return ResourceManager.GetString("sys_dm_exec_query_memory_grants", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *
        ///FROM
        ///  sys.dm_exec_query_optimizer_info
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_query_optimizer_info {
            get {
                return ResourceManager.GetString("sys_dm_exec_query_optimizer_info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  DB_NAME(dbid) AS dbname
        ///  , dbid
        ///  , COUNT(*) AS query_count
        ///  , SUM(total_elapsed_time/1000) AS total_elapsed_time
        ///  , SUM(total_worker_time/1000) AS total_worker_time
        ///  , SUM(total_physical_reads) AS total_physical_reads
        ///  , SUM(total_logical_reads) AS total_logical_reads
        ///  , SUM(total_logical_writes) AS total_logical_writes
        ///  , SUM(total_clr_time/1000) AS total_clr_time
        ///  , SUM(execution_count) AS execution_count
        ///  , SUM(plan_generation_num) AS plan_generation_num
        ///  [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_query_stats_summary {
            get {
                return ResourceManager.GetString("sys_dm_exec_query_stats_summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  DB_NAME(dbid) AS dbname
        ///  , dbid
        ///  , COUNT(*) AS query_count
        ///  , SUM(total_elapsed_time/1000) AS total_elapsed_time
        ///  , SUM(total_worker_time/1000) AS total_worker_time
        ///  , SUM(total_physical_reads) AS total_physical_reads
        ///  , SUM(total_logical_reads) AS total_logical_reads
        ///  , SUM(total_logical_writes) AS total_logical_writes
        ///  , SUM(total_clr_time/1000) AS total_clr_time
        ///  , SUM(execution_count) AS execution_count
        ///  , SUM(plan_generation_num) AS plan_generation_num
        ///- [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_query_stats_summary_2 {
            get {
                return ResourceManager.GetString("sys_dm_exec_query_stats_summary_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとCROSS APPLYがsyntax errorになるのでtempdbに移動
        ///SELECT TOP 200 /*mssqlstats_v2*/
        ///  DB_NAME(MIN(dbid)) AS &quot;DB Name&quot;
        ///  ,MIN(statement_text) AS &quot;Statement Text&quot;
        ///  ,MAX(last_execution_time) AS &quot;Last Exec Time&quot;
        ///  ,SUM(CAST(execution_count AS numeric(38))) AS &quot;Total Statement Exec Count&quot;
        ///  ,SUM(CAST(total_elapsed_time AS numeric(38))) / SUM(CAST(execution_count AS numeric(38))) / 1000.0 AS &quot;Avg Exec Time[ms]&quot;
        ///  ,SUM(CAST(total_worker_time AS numeric(38))) / SUM(CAST(execution_count AS n [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_query_stats_sysdb {
            get {
                return ResourceManager.GetString("sys_dm_exec_query_stats_sysdb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとCROSS APPLYがsyntax errorになるのでtempdbに移動
        ///SELECT TOP 200 /*mssqlstats_v2*/
        ///  DB_NAME(MIN(dbid)) AS &quot;DB Name&quot;
        ///  ,MIN(statement_text) AS &quot;Statement Text&quot;
        ///  ,MAX(last_execution_time) AS &quot;Last Exec Time&quot;
        ///  ,SUM(CAST(execution_count AS numeric(38))) AS &quot;Total Statement Exec Count&quot;
        ///  ,SUM(CAST(total_elapsed_time AS numeric(38))) / SUM(CAST(execution_count AS numeric(38))) / 1000.0 AS &quot;Avg Exec Time[ms]&quot;
        ///  ,SUM(CAST(total_worker_time AS numeric(38))) / SUM(CAST(execution_count AS n [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_query_stats_sysdb_2 {
            get {
                return ResourceManager.GetString("sys_dm_exec_query_stats_sysdb_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとCROSS APPLYがsyntax errorになるのでtempdbに移動
        ///SELECT TOP 200 /*mssqlstats_v2*/
        ///  DB_NAME(MIN(dbid)) AS &quot;DB Name&quot;
        ///  ,MIN(statement_text) AS &quot;Statement Text&quot;
        ///  ,MAX(last_execution_time) AS &quot;Last Exec Time&quot;
        ///  ,SUM(CAST(execution_count AS numeric(38))) AS &quot;Total Statement Exec Count&quot;
        ///  ,SUM(CAST(total_elapsed_time AS numeric(38))) / SUM(CAST(execution_count AS numeric(38))) / 1000.0 AS &quot;Avg Exec Time[ms]&quot;
        ///  ,SUM(CAST(total_worker_time AS numeric(38))) / SUM(CAST(execution_count AS n [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_query_stats_sysdb_plan {
            get {
                return ResourceManager.GetString("sys_dm_exec_query_stats_sysdb_plan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとCROSS APPLYがsyntax errorになるのでtempdbに移動
        ///SELECT TOP 200 /*mssqlstats_v2*/
        ///  DB_NAME(MIN(dbid)) AS &quot;DB Name&quot;
        ///  ,MIN(statement_text) AS &quot;Statement Text&quot;
        ///  ,MAX(last_execution_time) AS &quot;Last Exec Time&quot;
        ///  ,SUM(CAST(execution_count AS numeric(38))) AS &quot;Total Statement Exec Count&quot;
        ///  ,SUM(CAST(total_elapsed_time AS numeric(38))) / SUM(CAST(execution_count AS numeric(38))) / 1000.0 AS &quot;Avg Exec Time[ms]&quot;
        ///  ,SUM(CAST(total_worker_time AS numeric(38))) / SUM(CAST(execution_count AS n [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_query_stats_sysdb_plan_2 {
            get {
                return ResourceManager.GetString("sys_dm_exec_query_stats_sysdb_plan_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとCROSS APPLYがsyntax errorになるのでtempdbに移動
        ///SELECT TOP 200 /*mssqlstats_v2*/
        ///  DB_NAME(MIN(dbid)) AS &quot;DB Name&quot;
        ///  ,MIN(statement_text) AS &quot;Statement Text&quot;
        ///  ,MAX(last_execution_time) AS &quot;Last Exec Time&quot;
        ///  ,SUM(CAST(execution_count AS numeric(38))) AS &quot;Total Statement Exec Count&quot;
        ///  ,SUM(CAST(total_elapsed_time AS numeric(38))) / SUM(CAST(execution_count AS numeric(38))) / 1000.0 AS &quot;Avg Exec Time[ms]&quot;
        ///  ,SUM(CAST(total_worker_time AS numeric(38))) / SUM(CAST(execution_count AS n [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_query_stats_userdb {
            get {
                return ResourceManager.GetString("sys_dm_exec_query_stats_userdb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとCROSS APPLYがsyntax errorになるのでtempdbに移動
        ///SELECT TOP 200 /*mssqlstats_v2*/
        ///  DB_NAME(MIN(dbid)) AS &quot;DB Name&quot;
        ///  ,MIN(statement_text) AS &quot;Statement Text&quot;
        ///  ,MAX(last_execution_time) AS &quot;Last Exec Time&quot;
        ///  ,SUM(CAST(execution_count AS numeric(38))) AS &quot;Total Statement Exec Count&quot;
        ///  ,SUM(CAST(total_elapsed_time AS numeric(38))) / SUM(CAST(execution_count AS numeric(38))) / 1000.0 AS &quot;Avg Exec Time[ms]&quot;
        ///  ,SUM(CAST(total_worker_time AS numeric(38))) / SUM(CAST(execution_count AS n [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_query_stats_userdb_2 {
            get {
                return ResourceManager.GetString("sys_dm_exec_query_stats_userdb_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとCROSS APPLYがsyntax errorになるのでtempdbに移動
        ///SELECT TOP 200 /*mssqlstats_v2*/
        ///  DB_NAME(MIN(dbid)) AS &quot;DB Name&quot;
        ///  ,MIN(statement_text) AS &quot;Statement Text&quot;
        ///  ,MAX(last_execution_time) AS &quot;Last Exec Time&quot;
        ///  ,SUM(CAST(execution_count AS numeric(38))) AS &quot;Total Statement Exec Count&quot;
        ///  ,SUM(CAST(total_elapsed_time AS numeric(38))) / SUM(CAST(execution_count AS numeric(38))) / 1000.0 AS &quot;Avg Exec Time[ms]&quot;
        ///  ,SUM(CAST(total_worker_time AS numeric(38))) / SUM(CAST(execution_count AS n [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_query_stats_userdb_plan {
            get {
                return ResourceManager.GetString("sys_dm_exec_query_stats_userdb_plan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとCROSS APPLYがsyntax errorになるのでtempdbに移動
        ///SELECT TOP 200 /*mssqlstats_v2*/
        ///  DB_NAME(MIN(dbid)) AS &quot;DB Name&quot;
        ///  ,MIN(statement_text) AS &quot;Statement Text&quot;
        ///  ,MAX(last_execution_time) AS &quot;Last Exec Time&quot;
        ///  ,SUM(CAST(execution_count AS numeric(38))) AS &quot;Total Statement Exec Count&quot;
        ///  ,SUM(CAST(total_elapsed_time AS numeric(38))) / SUM(CAST(execution_count AS numeric(38))) / 1000.0 AS &quot;Avg Exec Time[ms]&quot;
        ///  ,SUM(CAST(total_worker_time AS numeric(38))) / SUM(CAST(execution_count AS n [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_exec_query_stats_userdb_plan_2 {
            get {
                return ResourceManager.GetString("sys_dm_exec_query_stats_userdb_plan_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  *
        ///FROM
        ///  sys.dm_hadr_cluster
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_hadr_cluster {
            get {
                return ResourceManager.GetString("sys_dm_hadr_cluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  db_name(s.database_id) AS db_name
        ///  , db_file_type = CASE 
        ///                   WHEN s.file_id = 2 THEN &apos;Log&apos; 
        ///                   ELSE &apos;Data&apos; 
        ///                   END
        ///  , f.physical_name 
        ///  ,( ( s.size_on_disk_bytes / 1024 ) / 1024.0 ) AS size_on_disk_mb
        ///  , v.volume_mount_point -- 単一ドライブ配下に複数の物理ディスクがマウントされている場合あり
        ///  , v.volume_id          -- マウントポイントがフォルダを示す場合はドライブレターが同一でも物理ディスク（＝volume_id）がことなる
        ///  
        ///  -- IOPS
        ///  , (num_of_reads+num_of_writes)/(sample_ms/1000) AS iops  -- sa [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_io_virtual_file_stats {
            get {
                return ResourceManager.GetString("sys_dm_io_virtual_file_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  db_name(s.database_id) AS db_name
        ///  , db_file_type = CASE 
        ///                   WHEN s.file_id = 2 THEN &apos;Log&apos; 
        ///                   ELSE &apos;Data&apos; 
        ///                   END
        ///  , f.physical_name 
        ///  ,( ( s.size_on_disk_bytes / 1024 ) / 1024.0 ) AS size_on_disk_mb
        ///  , v.volume_mount_point -- 単一ドライブ配下に複数の物理ディスクがマウントされている場合あり
        ///  , v.volume_id          -- マウントポイントがフォルダを示す場合はドライブレターが同一でも物理ディスク（＝volume_id）がことなる
        ///  
        ///  -- IOPS
        ///  , (num_of_reads+num_of_writes)/(sample_ms/1000) AS iops  -- sa [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_io_virtual_file_stats_2 {
            get {
                return ResourceManager.GetString("sys_dm_io_virtual_file_stats_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  DB_NAME(database_id) AS dbname
        ///  , COUNT_BIG(*) AS cached_pages
        ///  , CAST(COUNT_BIG(*) * 8/1024.0 AS DECIMAL (10,2))  AS cached_size_mb
        ///  , AVG(read_microsec) AS avg_read_microsec
        ///FROM sys.dm_os_buffer_descriptors
        ///WHERE database_id &lt;&gt; 32767 -- ResourceDb
        ///GROUP BY DB_NAME(database_id)
        ///ORDER BY cached_pages DESC
        ///OPTION(RECOMPILE)
        ////*
        ///オブジェクトごとなら↓
        ///select top 50 b.database_id, db=db_name(b.database_id)
        ///  ,p.object_id
        ///  ,object_name(p.object_id) as objname
        ///  ,p.index_id
        ///   [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_buffer_descriptors {
            get {
                return ResourceManager.GetString("sys_dm_os_buffer_descriptors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  *
        ///FROM
        ///  sys.dm_os_buffer_pool_extension_configuration
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_buffer_pool_extension_configuration {
            get {
                return ResourceManager.GetString("sys_dm_os_buffer_pool_extension_configuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  *
        ///FROM
        ///  sys.dm_os_cluster_nodes
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_cluster_nodes {
            get {
                return ResourceManager.GetString("sys_dm_os_cluster_nodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  *
        ///FROM
        ///  sys.dm_os_host_info
        ///--sys.dm_os_host_infoはSQL Server 2017 以降でサポート
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_host_info {
            get {
                return ResourceManager.GetString("sys_dm_os_host_info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *, wait_time_ms/waiting_requests_count as avg_wait_time_ms
        ///FROM
        ///  sys.dm_os_latch_stats
        ///WHERE
        ///  wait_time_ms &gt; 0
        ///ORDER BY
        ///  wait_time_ms DESC
        ///-- 必要に応じて実行の都度、統計をクリアを行う。
        ///-- DBCC SQLPERF (&apos;sys.dm_os_latch_stats&apos;, CLEAR)
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_latch_stats {
            get {
                return ResourceManager.GetString("sys_dm_os_latch_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT distinct TOP 20 /*mssqlstats_v1*/
        ///  cc.cache_address,
        ///  cc.name,
        ///  cc.type,
        ///  cc.pages_kb,
        ///  cc.pages_in_use_kb,
        ///  cc.entries_count,
        ///  cc.entries_in_use_count,
        ///  ch.rounds_count,
        ///  ch.removed_all_rounds_count,
        ///  ch.removed_last_round_count,
        ///  *
        ///FROM
        ///  sys.dm_os_memory_cache_counters cc
        ///  join sys.dm_os_memory_cache_clock_hands ch on (cc.cache_address = ch.cache_address)
        ///WHERE
        ///  ch.rounds_count &gt; 0
        ///  and ch.removed_all_rounds_count &gt; 0
        ///ORDER BY
        ///  cc.pages_kb desc
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_memory_cache_clock_hands {
            get {
                return ResourceManager.GetString("sys_dm_os_memory_cache_clock_hands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT distinct TOP 20 /*mssqlstats_v1*/
        ///  cc.cache_address, 
        ///  cc.name, 
        ///  cc.type,
        ///  CAST(cc.single_pages_kb as numeric(38)) + CAST(cc.multi_pages_kb as numeric(38)) as total_kb, 
        ///  CAST(cc.single_pages_in_use_kb as numeric(38)) + CAST(cc.multi_pages_in_use_kb as numeric(38)) as total_in_use_kb, 
        ///  cc.entries_count, 
        ///  cc.entries_in_use_count,
        ///  ch.rounds_count,
        ///  ch.removed_all_rounds_count, 
        ///  ch.removed_last_round_count,
        ///  *
        ///FROM 
        ///  sys.dm_os_memory_cache_counters cc 
        ///  join sys.dm_os_mem [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_memory_cache_clock_hands_2 {
            get {
                return ResourceManager.GetString("sys_dm_os_memory_cache_clock_hands_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v2*/
        ///  type
        ///  , COUNT(*)  AS count
        ///  , CAST((SUM(pages_kb)/1024.0) AS DECIMAL (15,2)) AS used_size_mb
        ///  , CAST((SUM(virtual_memory_reserved_kb)/1024.0) AS DECIMAL (15,2)) AS vm_reserved_size_mb
        ///  , CAST((SUM(virtual_memory_committed_kb)/1024.0) AS DECIMAL (15,2)) AS vm_committed_size_mb
        ///  , CAST((SUM(awe_allocated_kb)/1024.0) AS DECIMAL (15,2)) AS awe_allocated_size_mb
        ///  , CAST((SUM(shared_memory_reserved_kb)/1024.0) AS DECIMAL (15,2)) AS sm_reserved_size_mb
        ///  , CAST((SUM(shared_ [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_memory_clerks {
            get {
                return ResourceManager.GetString("sys_dm_os_memory_clerks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *
        ///FROM
        ///  sys.dm_os_nodes
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_nodes {
            get {
                return ResourceManager.GetString("sys_dm_os_nodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  counter_name
        ///  ,&quot;CPU Time:Requests&quot;
        ///  ,&quot;CPU Time:Total(ms)&quot;
        ///  ,&quot;Elapsed Time:Requests&quot;
        ///  ,&quot;Elapsed Time:Total(ms)&quot;
        ///FROM
        ///  (
        ///    SELECT
        ///      counter_name
        ///      ,instance_name
        ///      ,cntr_value
        ///    FROM
        ///      sys.dm_os_performance_counters
        ///    WHERE
        ///      OBJECT_NAME LIKE &apos;%Batch Resp Statistics%&apos;
        ///  ) perf
        ///  PIVOT
        ///  (
        ///    AVG(cntr_value)
        ///    FOR instance_name
        ///    IN
        ///    (
        ///      &quot;CPU Time:Requests&quot;
        ///      ,&quot;CPU Time:Total(ms)&quot;
        ///      ,&quot;Elapsed Time:Requests&quot;
        /// [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_performance_counters_batch_resp_statistics {
            get {
                return ResourceManager.GetString("sys_dm_os_performance_counters_batch_resp_statistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *  
        ///FROM
        ///  sys.dm_os_process_memory
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_process_memory {
            get {
                return ResourceManager.GetString("sys_dm_os_process_memory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT TOP 100 /*mssqlstats_v1*/
        ///  *  
        ///FROM
        ///  sys.dm_os_ring_buffers
        ///WHERE
        ///  ring_buffer_type in (&apos;RING_BUFFER_RESOURCE_MONITOR&apos;, &apos;RING_BUFFER_OOM&apos;, &apos;RING_BUFFER_MEMORY_BROKER&apos;, &apos;RING_BUFFER_BUFFER_POOL&apos;)
        ///ORDER BY timestamp DESC
        ///-- RING_BUFFER_RESOURCE_MONITOR：リソースモニタからの通知
        ///-- RING_BUFFER_OOM：外部メモリ負荷の通知
        ///-- RING_BUFFER_MEMORY_BROKER：内部メモリ負荷の通知
        ///-- RING_BUFFER_BUFFER_POOL：バッファプールにおけるエラーの通知
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_ring_buffers {
            get {
                return ResourceManager.GetString("sys_dm_os_ring_buffers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *  
        ///FROM
        ///  sys.dm_os_schedulers
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_schedulers {
            get {
                return ResourceManager.GetString("sys_dm_os_schedulers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *
        ///FROM
        ///  sys.dm_os_spinlock_stats
        ///WHERE
        ///  spins &gt; 0
        ///ORDER BY
        ///  spins DESC
        ///-- 必要に応じて実行の都度、統計をクリアを行う。
        ///-- DBCC SQLPERF (&apos;sys.dm_os_spinlock_stats&apos;, CLEAR)
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_spinlock_stats {
            get {
                return ResourceManager.GetString("sys_dm_os_spinlock_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  CAST(DATEADD(SECOND, (ms_ticks/1000)*(-1), GETDATE()) AS nvarchar(25)) as os_start_time 
        ///  , * 
        ///FROM
        ///  sys.dm_os_sys_info
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_sys_info {
            get {
                return ResourceManager.GetString("sys_dm_os_sys_info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *  
        ///FROM
        ///  sys.dm_os_sys_memory
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_sys_memory {
            get {
                return ResourceManager.GetString("sys_dm_os_sys_memory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  wait_type 
        ///  , waiting_tasks_count
        ///  , wait_time_ms AS total_wait_time_ms
        ///  , wait_time_ms/waiting_tasks_count AS avg_total_wait_time_ms
        ///  , signal_wait_time_ms AS cpu_wait_time_ms
        ///  , signal_wait_time_ms/waiting_tasks_count AS avg_cpu_wait_time_ms
        ///  , (wait_time_ms - signal_wait_time_ms) AS resource_wait_time_ms
        ///  , (wait_time_ms - signal_wait_time_ms)/waiting_tasks_count AS avg_resource_wait_time_ms
        ///  , max_wait_time_ms
        ///  , CAST (N&apos;https://www.sqlskills.com/help/waits/ [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_wait_stats {
            get {
                return ResourceManager.GetString("sys_dm_os_wait_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  CAST(100.0 * SUM(CAST(signal_wait_time_ms AS numeric(38))) / SUM(CAST(wait_time_ms AS numeric(38))) AS numeric(20,2)) AS [%RUNNABLE]
        ///  ,CAST(100.0 * SUM(CAST(wait_time_ms AS numeric(38)) - CAST(signal_wait_time_ms AS numeric(38))) / SUM(CAST(wait_time_ms AS numeric(38))) AS numeric(20,2)) AS [%RUNNING+SUSPEND]
        ///FROM
        ///  sys.dm_os_wait_stats
        ///WHERE
        ///  wait_time_ms &gt; 0
        ///  /*2017/01/29 update*/
        ///  AND wait_type NOT IN (
        ///    &apos;BROKER_EVENTHANDLER&apos;
        ///    ,&apos;BROKER_RECEIVE_WAITFOR&apos;
        ///     [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_wait_stats_ratio {
            get {
                return ResourceManager.GetString("sys_dm_os_wait_stats_ratio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *
        ///FROM
        ///  sys.dm_os_windows_info
        ///--sys.dm_os_windows_infoはSQL Server 2008 R2 SP1 以降でサポート
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_windows_info {
            get {
                return ResourceManager.GetString("sys_dm_os_windows_info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとAPPLYがsyntax errorになるのでtempdbに移動
        ///SELECT /*mssqlstats_v1*/
        ///  th.thread_address
        ///  , w.worker_address
        ///  , t.task_address
        ///  /*, w.processor_group 2008R2以降でサポート*/
        ///  , s.parent_node_id as numa_node
        ///  , s.cpu_id
        ///  , s.scheduler_id
        ///  , s.status
        ///  , s.current_tasks_count
        ///  , s.runnable_tasks_count
        ///  , s.current_workers_count
        ///  , s.active_workers_count
        ///  , s.work_queue_count
        ///  , s.is_idle
        ///  , r.command
        ///  ,SUBSTRING(q.text, (r.statement_start_offset/2) + 1,
        ///    ((CASE r.s [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_os_workers {
            get {
                return ResourceManager.GetString("sys_dm_os_workers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/ 
        ///  * 
        ///FROM 
        ///  sys.dm_server_memory_dumps 
        ///ORDER BY
        ///  creation_time 
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_server_memory_dumps {
            get {
                return ResourceManager.GetString("sys_dm_server_memory_dumps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/ 
        ///  * 
        ///FROM 
        ///  sys.dm_server_registry 
        ///ORDER BY
        ///  value_name 
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_server_registry {
            get {
                return ResourceManager.GetString("sys_dm_server_registry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *   
        ///FROM
        ///  sys.dm_server_services
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_server_services {
            get {
                return ResourceManager.GetString("sys_dm_server_services", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *   
        ///FROM
        ///  sys.dm_tcp_listener_states
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_tcp_listener_states {
            get {
                return ResourceManager.GetString("sys_dm_tcp_listener_states", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  DATEDIFF(SECOND, database_transaction_begin_time , GETDATE()) AS &quot;Transaction Elapsed Time(sec)&quot;
        ///  , database_transaction_begin_time
        ///  , database_transaction_type
        ///  , database_transaction_state
        ///  , s.login_time
        ///  , s.host_name
        ///  , s.program_name
        ///  , s.login_name
        ///  , db_name(dt.database_id) AS dbname
        ///  , s.status
        ///  , text as active_query
        ///  , dt.*
        ///  , s.*
        ///FROM
        ///  sys.dm_tran_database_transactions dt
        ///  LEFT JOIN sys.dm_tran_session_transactions st ON dt.transaction_id  [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_dm_tran_database_transactions {
            get {
                return ResourceManager.GetString("sys_dm_tran_database_transactions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   WITH MyDuplicate AS (SELECT /*mssqlstats_v1*/
        /// Sch.[name] AS SchemaName,
        /// Obj.[name] AS TableName,
        /// Idx.[name] AS IndexName,
        /// INDEX_Col(Sch.[name] + &apos;.&apos; + Obj.[name], Idx.index_id, 1) AS Col1,
        /// INDEX_Col(Sch.[name] + &apos;.&apos; + Obj.[name], Idx.index_id, 2) AS Col2,
        /// INDEX_Col(Sch.[name] + &apos;.&apos; + Obj.[name], Idx.index_id, 3) AS Col3,
        /// INDEX_Col(Sch.[name] + &apos;.&apos; + Obj.[name], Idx.index_id, 4) AS Col4,
        /// INDEX_Col(Sch.[name] + &apos;.&apos; + Obj.[name], Idx.index_id, 5) AS Col5,
        /// INDEX_Col(Sch.[name] + &apos;.&apos; + Obj.[nam [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_indexes {
            get {
                return ResourceManager.GetString("sys_indexes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとCROSS APPLYがsyntax errorになるのでtempdbに移動
        ///SELECT /*mssqlstats_v1*/
        ///  db_name(m.database_id) as db_name
        ///  , v.file_system_type
        ///  , v.total_bytes / 1024 / 1024 as total_Mbytes
        ///  , v.available_bytes / 1024 / 1024 as available_bytes
        ///  , m.file_id
        ///  , m.type_desc
        ///  , m.name
        ///  , m.physical_name
        ///  , CAST(m.size AS numeric(38)) * 8 / 1024 as file_size_mb
        ///  , m.data_space_id
        ///  , *
        ///FROM 
        ///  sys.master_files as m
        ///  CROSS APPLY sys.dm_os_volume_stats(m.database_id, m.file_id) as  [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_master_files {
            get {
                return ResourceManager.GetString("sys_master_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE tempdb  -- 2000互換モードのDBだとCROSS APPLYがsyntax errorになるのでtempdbに移動
        ///SELECT /*mssqlstats_v1*/
        ///  db_name(m.database_id) as db_name
        ///  , m.file_id
        ///  , m.type_desc
        ///  , m.name
        ///  , m.physical_name
        ///  , CAST(m.size AS numeric(38)) * 8 / 1024 as file_size_mb
        ///  , m.data_space_id
        ///  , *
        ///FROM 
        ///  sys.master_files as m
        ///-- WHERE database_id = DB_ID()
        ///ORDER BY db_name
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_master_files_2 {
            get {
                return ResourceManager.GetString("sys_master_files_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *   
        ///FROM
        ///  sys.resource_governor_configuration
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_resource_governor_configuration {
            get {
                return ResourceManager.GetString("sys_resource_governor_configuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *   
        ///FROM
        ///  sys.resource_governor_resource_pools
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_resource_governor_resource_pools {
            get {
                return ResourceManager.GetString("sys_resource_governor_resource_pools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT /*mssqlstats_v1*/
        ///  *   
        ///FROM
        ///  sys.resource_governor_workload_groups
        ///OPTION(RECOMPILE) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_resource_governor_workload_groups {
            get {
                return ResourceManager.GetString("sys_resource_governor_workload_groups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT TOP 500 /*mssqlstats_v1*/
        ///  o.name as table_name
        ///  , o.object_id
        ///  , s.name as stat_name
        ///  , STATS_DATE(s.object_id, s.stats_id) as last_updated
        ///  , s.stats_id
        ///  , s.auto_created 
        ///  , s.user_created 
        ///  , s.no_recompute
        ///  , s.has_filter
        ///  , s.filter_definition
        ///  --, s.is_temporary  /*SQL12～*/
        ///FROM sys.stats AS s 
        ///  LEFT JOIN sys.objects AS o 
        ///    ON s.object_id = o.object_id 
        ///WHERE 
        ///  type = &apos;U&apos;
        ///--AND s.name NOT LIKE (&apos;_WA_Sys_%&apos;)
        ///ORDER BY 
        ///  last_updated ASC
        ///-- SQL12以降はsys.dm_db_s [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_stats {
            get {
                return ResourceManager.GetString("sys_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v1*/
        ///EXEC master.sys.xp_enumerrorlogs に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_xp_enumerrorlogs {
            get {
                return ResourceManager.GetString("sys_xp_enumerrorlogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v2*/
        ///EXEC sys.xp_instance_regread N&apos;HKEY_LOCAL_MACHINE&apos;, N&apos;HARDWARE\DESCRIPTION\System\BIOS&apos;, N&apos;BiosReleaseDate&apos; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_xp_instance_regread_biosreleasedate {
            get {
                return ResourceManager.GetString("sys_xp_instance_regread_biosreleasedate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v1*/
        ///EXEC sys.xp_instance_regread N&apos;HKEY_LOCAL_MACHINE&apos;, N&apos;HARDWARE\DESCRIPTION\System\CentralProcessor\0&apos;, N&apos;ProcessorNameString&apos; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string sys_xp_instance_regread_processornamestring {
            get {
                return ResourceManager.GetString("sys_xp_instance_regread_processornamestring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT BuildNumber FROM Win32_BIOS に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string wmi_win32_bios {
            get {
                return ResourceManager.GetString("wmi_win32_bios", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT ElementName FROM WIN32_PowerPlan
        ///
        ///WIN32_PowerPlanはnamespaceが\\root\cimv2\powerなので、現状の実装はcimv2固定だから、実行できず。。。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string wmi_win32_powerplan {
            get {
                return ResourceManager.GetString("wmi_win32_powerplan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SELECT name, startname FROM Win32_Service WHERE name LIKE &apos;MS%&apos; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string wmi_win32_service {
            get {
                return ResourceManager.GetString("wmi_win32_service", resourceCulture);
            }
        }
        
        /// <summary>
        ///   /*mssqlstats_v1*/
        ///DECLARE
        ///@value VARCHAR(64),
        ///@key VARCHAR(512)
        ///SET @key = &apos;SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\&apos;
        ///+ &apos;ControlPanel\NameSpace\{025A5937-A6BE-4686-A844-36FE4BEC8B6D}&apos;;
        ///
        ///EXEC master..xp_regread
        ///@rootkey = &apos;HKEY_LOCAL_MACHINE&apos;,
        ///@key = @key,
        ///@value_name = &apos;PreferredPlan&apos;,
        ///@value = @value OUTPUT;
        ///
        ///SELECT @value;  に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string xp_regread_preferred_plan {
            get {
                return ResourceManager.GetString("xp_regread_preferred_plan", resourceCulture);
            }
        }
    }
}
